apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: appmonitoringconfigs.azmon.app.monitoring # name must match the spec fields below, and be in the form: <plural>.<group>
spec:
  group: azmon.app.monitoring # group name to use for REST API: /apis/<group>/<version>
  names:
    plural: appmonitoringconfigs # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    singular: appmonitoringconfig # singular name to be used as an alias on the CLI and for display
    kind: appmonitoringconfig # kind is normally the CamelCased singular type. Your resource manifests use this.
    shortNames: # shortNames allow shorter string to match your resource on the CLI
    - appmonitoring
  scope: Namespaced # either Namespaced or Cluster
  versions:
    - name: v1
      served: true # Each version can be enabled/disabled by Served flag.
      storage: true # One and only one version must be marked as the storage version.
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                autoInstrumentationPlatforms:
                  type: array
                  default: [ DotNet, Java, NodeJs, OpenTelemetry ]
                  nullable: false
                  minItems: 0
                  maxItems: 4
                  items:
                    type: string
                    enum:
                    - DotNet
                    - Java
                    - NodeJs
                    - OpenTelemetry
                aiConnectionString:
                  type: string
                  nullable: false
                deployments:
                  type: array
                  default: []
                  nullable: false
                  items:
                    type: string
              required: [ aiConnectionString ]
          required: [ spec ]
---
apiVersion: v1
kind: Secret
metadata: 
  name: app-monitoring-webhook-cert
  namespace: kube-system
data:
  ca.cert:  ""
  tls.cert:  ""
  tls.key:  ""
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata: 
  name: app-monitoring-webhook
  namespace: kube-system
  labels: 
    component: ama-logs-appinsights
webhooks: 
  - name: app-monitoring-webhook-service.kube-system.svc
    clientConfig: 
      service: 
        name: app-monitoring-webhook-service
        namespace: kube-system
        path: "/"
      caBundle: ""
    rules: 
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["pods"]
    admissionReviewVersions: ["v1"]
    sideEffects: None
    failurePolicy: Ignore
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appmonitoringconfig-crd-watcher
rules:
- apiGroups: ["azmon.app.monitoring"]
  resources: ["appmonitoringconfigs"]
  verbs: ["get","watch","list"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "delete", "patch"]
- apiGroups: [ "admissionregistration.k8s.io"]
  resources: [ "mutatingwebhookconfigurations"]
  verbs: [ "get", "list", "delete", "patch", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: app-monitoring-webhook-binding
  labels:
    component: ama-logs-appinsights
subjects:
- kind: ServiceAccount
  name: app-monitoring-webhook-sa
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: appmonitoringconfig-crd-watcher
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: appmonitoring-cert-manager-hook-install
  namespace: kube-system
  labels:
    component: ama-logs-appinsights
spec:
  template:
    spec:
      serviceAccountName: app-monitoring-webhook-sa
      containers:
        - env: 
          - name: CONTAINER_MODE
            value: secrets-manager
          image: ${AIDEV_IMAGE_NAME}
          imagePullPolicy: IfNotPresent
          name: app-monitoring-cert-manager
      restartPolicy: OnFailure
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: ama-logs-appinsights
    kubernetes.azure.com/managedby: aks
  name: app-monitoring-webhook-deployment
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels: 
      app: app-monitoring-webhook
  template: 
    metadata: 
      labels: 
        app: app-monitoring-webhook
    spec: 
      affinity: 
        nodeAffinity: 
          requiredDuringSchedulingIgnoredDuringExecution: 
            nodeSelectorTerms: 
            - matchExpressions: 
              - key: kubernetes.io/os
                operator: In
                values: 
                - linux
              - key: kubernetes.azure.com/cluster
                operator: Exists
              - key: type
                operator: NotIn
                values: 
                - virtual-kubelet
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        - operator: "Exists"
          effect: NoExecute
        - operator: "Exists"
          effect: NoSchedule
        - operator: "Exists"
          effect: PreferNoSchedule
      containers: 
      - env: 
        - name: ARM_ID
          value: /subscriptions/66010356-d8a5-42d3-8593-6aaa3aeb1c11/resourceGroups/appmonitoring-pipeline-test/providers/Microsoft.ContainerService/managedClusters/aks-pipeline-testbed-ai
        - name: ARM_REGION
          value: eastus
        image: ${AIDEV_IMAGE_NAME}
        imagePullPolicy: IfNotPresent
        name: app-monitoring-webhook
        ports: 
        - containerPort: 1337
        resources: 
          limits: 
            cpu: 200m
            memory: 200Mi
          requests: 
            cpu: 200m
            memory: 200Mi
        volumeMounts: 
        - mountPath: /mnt/webhook
          name: webhook-certs
          readOnly: true
      serviceAccount: app-monitoring-webhook-sa
      volumes: 
      - name: webhook-certs
        secret: 
          secretName: app-monitoring-webhook-cert
---
apiVersion: "v1"
kind: "ServiceAccount"
metadata: 
  labels: 
    component: ama-logs-appinsights
  name: app-monitoring-webhook-sa
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  name: app-monitoring-webhook-service
  namespace: kube-system
  labels:
    component: ama-logs-appinsights
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 1337
  selector:
    app: app-monitoring-webhook