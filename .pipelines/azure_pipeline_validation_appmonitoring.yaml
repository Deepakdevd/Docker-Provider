# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
    - ai_prod

pr:
  branches:
    include:
    - ai_prod

variables:
  armServiceConnectionName: 'ai-acr-validation-rsx'
  subscription: '66010356-d8a5-42d3-8593-6aaa3aeb1c11'
  containerRegistry: 'containerinsightsprod' # this build pushes the aidev image to the dev ACR (caution: ACR that has "prod" in its name is the dev one, the one without "prod" is prod AME)
  repoImageName: '${{ variables.containerRegistry }}.azurecr.io/public/azuremonitor/applicationinsights/aidev'
  IS_PR: $[eq(variables['Build.Reason'], 'PullRequest')]

jobs:
- job: common
  variables:
    Codeql.SkipTaskAutoInjection: true
  pool:
    name: rambhatt-test-es-pool
  steps:
  - checkout: self
    fetchDepth: 0
    fetchTags: true
  - task: ComponentGovernanceComponentDetection@0
  ## dev builds are in format Major.Minor.Patch-CommitAheadCount-CommitId
  ## prod release are in format Major.Minor.Patch
  ## preview release are in format preview-Major.Minor.Patch
  - bash: |
      commit=$(git describe)
      imageTag="$commit"
            
      echo "imageTag is $imageTag"
      
      echo "##vso[task.setvariable variable=imageTag;isOutput=true]$imageTag"
      
      cd $(Build.SourcesDirectory)/deployment/mergebranch-webhook-deployment/ServiceGroupRoot/Scripts
    name: setup

  - task: CopyFiles@2
    displayName: "Copy ev2 deployment artifacts"
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)/deployment"
      Contents: |
        **/*
      TargetFolder: '$(Build.ArtifactStagingDirectory)/build'

  - task: CopyFiles@2
    displayName: "Copy ev2 deployment scripts"
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)/.pipelines"
      Contents: |
        **/*.sh
      TargetFolder: '$(Build.ArtifactStagingDirectory)/build'

  - task: CopyFiles@2
    displayName: "Copy ev2 deployment scripts"
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)/kubernetes"
      Contents: |
        *.yaml
      TargetFolder: '$(Build.ArtifactStagingDirectory)/build'

  - task: CopyFiles@2
    displayName: "Copy ev2 deployment scripts"
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)/charts"
      Contents: |
        **/*
      TargetFolder: '$(Build.ArtifactStagingDirectory)/build'

  - task: CopyFiles@2
    displayName: "Copy ev2 deployment scripts"
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)/test/e2e"
      Contents: |
        *.yaml
      TargetFolder: '$(Build.ArtifactStagingDirectory)/build'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: drop