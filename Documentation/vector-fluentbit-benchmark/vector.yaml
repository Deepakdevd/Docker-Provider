apiVersion: v1
kind: ConfigMap
metadata:
  name: vector
  labels:
    app.kubernetes.io/name: vector
    app.kubernetes.io/instance: vector
    app.kubernetes.io/component: Agent
    app.kubernetes.io/version: "0.30.0-distroless-libc"
data:
  vector.yaml: |
    data_dir: /var/lib/vector
    sinks:
      azure_monitor_logs:
        buffer:
        - max_events: 1000000
          type: memory
          when_full: block
        customer_id: <Update-log-analytics-workspace-guid>
        inputs:
        - parser
        log_type: VectorContainerLog
        shared_key:  <Update-log-analytics-workspace-key>
        type: azure_monitor_logs
    sources:
      kube_log:
        include:
        - /var/log/containers/*.log
        exclude:
        - /var/log/containers/*_kube-system_*.log
        type: file
    transforms:
      parser:
        type: remap
        inputs:
        - kube_log
        source: |-
         . |= parse_regex!(.message, r'^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$')
         .filepath = .file
         del(.source_type)
         del(.time)
         del(.file)
         del(.host)
         del(.message)
         del(.Message)
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vector
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vector-reader
rules:
  - apiGroups: [""]
    resources:
      [
        "pods",
        "events",
        "nodes",
        "nodes/stats",
        "nodes/metrics",
        "nodes/spec",
        "nodes/proxy",
        "namespaces",
        "services",
        "persistentvolumes"
      ]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["apps", "extensions", "autoscaling"]
    resources: ["replicasets", "deployments", "horizontalpodautoscalers"]
    verbs: ["list"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vectorclusterrolebinding
subjects:
  - kind: ServiceAccount
    name: vector
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: vector-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: vector
  labels:
    app.kubernetes.io/name: vector
    app.kubernetes.io/instance: vector
    app.kubernetes.io/component: Agent
    app.kubernetes.io/version: "0.30.0-distroless-libc"
  annotations:
    {}
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: vector
      app.kubernetes.io/instance: vector
      app.kubernetes.io/component: Agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vector
        app.kubernetes.io/instance: vector
        app.kubernetes.io/component: Agent
        vector.dev/exclude: "true"
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: vector
      dnsPolicy: ClusterFirst
      containers:
        - name: vector
          image: "timberio/vector:0.30.0-distroless-libc"
          imagePullPolicy: IfNotPresent
          args:
            - --config-dir
            - /etc/vector/
          env:
            - name: VECTOR_SELF_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: VECTOR_SELF_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: VECTOR_SELF_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PROCFS_ROOT
              value: "/host/proc"
            - name: SYSFS_ROOT
              value: "/host/sys"
          ports:
          resources:
            limits:
              cpu: "4"
              memory: 4Gi
            requests:
              cpu: 300m
              memory: 256Mi
          volumeMounts:
            - name: data
              mountPath: "/var/lib/vector"
            - name: config
              mountPath: "/etc/vector/"
              readOnly: true
            - name: var-log
              mountPath: "/var/log/"
              readOnly: true
            - name: var-lib
              mountPath: "/var/lib"
              readOnly: true
      terminationGracePeriodSeconds: 60
      volumes:
        - name: config
          projected:
            sources:
              - configMap:
                  name: vector
        - name: data
          hostPath:
            path: "/var/lib/vector"
        - name: var-log
          hostPath:
            path: "/var/log/"
        - name: var-lib
          hostPath:
            path: "/var/lib/"
